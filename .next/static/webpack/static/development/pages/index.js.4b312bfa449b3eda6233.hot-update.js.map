{"version":3,"file":"static/webpack/static/development/pages/index.js.4b312bfa449b3eda6233.hot-update.js","sources":["webpack:///./components/PlayerList.js"],"sourcesContent":["import fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\n\nconst teams = [\n\n  { name: 'Bob Sagets', id: 0 },\n  { name: 'Arizona Coyotes', id: 1 },\n  { name: 'Boston Bruins', id: 2 },\n  { name: 'Buffalo Sabres', id: 3 },\n  { name: 'Calgary Flames', id: 4 },\n  { name: 'Carolina Hurricanes', id: 5 },\n  { name: 'Chicago Blackhawks', id: 6 },\n  { name: 'Colorado Avalanche', id: 7 },\n  { name: 'Columbus Blue Jackets', id: 8 },\n  { name: 'Dallas Stars', id: 9 },\n  { name: 'Detroit Red Wings', id: 10 },\n  { name: 'Edmonton Oilers', id: 11 },\n  { name: 'Florida Panthers', id: 12 },\n  { name: 'Los Angeles Kings', id: 13 },\n  { name: 'Minnesota Wild', id: 14 },\n  { name: 'Montreal Canadiens', id: 15 },\n  { name: 'Nashville Predators', id: 16 },\n  { name: 'New Jersey Devils', id: 17 },\n  { name: 'New York Islanders', id: 18 },\n  { name: 'New York Rangers', id: 19 },\n  { name: 'Ottawa Senators', id: 20 },\n  { name: 'Philadelphia Flyers', id: 21 },\n  { name: 'Pittsburgh Penguins', id: 22 },\n  { name: 'San Jose Sharks', id: 23 },\n  { name: 'St Louis Blues', id: 24 },\n  { name: 'Tampa Bay Lightning', id: 25 },\n  { name: 'Toronto Maple Leafs', id: 26 },\n  { name: 'Vancouver Canucks', id: 27 },\n  { name: 'Vegas Golden Knights', id: 28 },\n  { name: 'Washington Capitals', id: 29 },\n  { name: 'Winnipeg Jets', id: 30 },\n\n];\n\nclass PlayerList extends React.Component { // eslint-disable-line no-undef\n  state = {\n    players: [],\n  };\n\n  showPlayers = async (e) => {\n    const teamName = e.target.value;\n\n    // Fetch teams from NHL api\n    const res = await fetch(\n      'https://statsapi.web.nhl.com/api/v1/teams?expand=team.roster',\n    );\n    const json = await res.json();\n\n    // Get the correct team\n    const [team] = json.teams.filter(obj => obj.name === teamName);\n\n    // Get player names and ids from Roster\n    const players = team.roster.roster.map(obj => ({\n      name: obj.person.fullName,\n      id: obj.person.id,\n    }));\n\n    this.setState({\n      players,\n    });\n  };\n\n  render() {\n    const { players } = this.state;\n\n    return (\n      <section>\n        <h1>Find active players</h1>\n        <select>\n          <option value=\"\">Select a team</option>\n          {teams.map(team => (\n            <option key={team.id} value={team.name} onClick={this.showPlayers}>\n              {team.name}\n            </option>\n          ))}\n        </select>\n\n        {players.map(player => (\n          <p key={player.id}>\n            <Link href={`/player?id=${player.id}`}>\n              <a>{player.name}</a>\n            </Link>\n          </p>\n        ))}\n      </section>\n\n    );\n  }\n}\n\nexport default PlayerList;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;;;;;;AAGA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAIA;AAJA;AAAA;AACA;AADA;AAOA;AAEA;AATA;AAUA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAIA;AACA;AADA;AACA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAsBA;AAAA;AACA;AADA;AAGA;AAIA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AAOA;AACA;AAAA;AACA;AAAA;AAFA;AAUA;;;;AArDA;AACA;AAuDA;;;;A","sourceRoot":""}